$attr: false;

@mixin attr() {
  @if $attr {
    [#{$prefix}#{$attr}] {
      @content;
    }
  }
  @else {
    @warn "attr() needs to be called within an AM block";
  }
}

@mixin val($value) {
  @if $attr {
    [#{$prefix}#{$attr}~="#{$value}"] {
      @content;
    }

    @each $bp in $breakpoints {
      .breakpoint-#{$bp} [#{$prefix}#{$attr}~="#{$bp}:#{$value}"] {
        @extend [#{$prefix}#{$attr}~="#{$value}"];
      }
    }
  }
  @else {
    @warn "attr() needs to be called within an AM block";
  }
}

@mixin AM($local-attr) {
  $attr: $local-attr;
  @content;
  $attr: false;
}

@mixin trait($attr, $value: "") {
  @extend [#{$prefix}#{$attr}];
  $string: $value;
  $continue: true;
  @while $continue {
    $next-space: str-index($string, ' ');
    @if type-of($next-space) == number {
      $next-word: str-slice($string, 1, $next-space - 1);
      $string: str-slice($string, $next-space + 1);
    }
    @else {
      $next-word: $string;
      $continue: false;
    }
    @extend [#{$prefix}#{$attr}~="#{$next-word}"];
  }
}
